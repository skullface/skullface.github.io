---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Card from "../../components/Card.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  const tags: string[] = [];

  allPosts.forEach((post: CollectionEntry<"blog">) => {
    post.data.tags?.forEach((tag: string) => {
      tags.push(tag.toLowerCase());
    });
  });

  return Array.from(new Set(tags)).map((tag) => {
    return {
      params: { tag },
      props: {
        tag,
        posts: allPosts.filter((post: CollectionEntry<"blog">) =>
          (post.data.tags ?? [])
            .map((tag: string) => tag.toLowerCase())
            .includes(tag)
        ),
      },
    };
  });
}

interface Props {
  tag: string;
  posts: CollectionEntry<"blog">[];
}

const { tag, posts } = Astro.props as Props;
---

<Layout title={`Blog posts about ${tag}`}>
  <main>
    <h1>Posts tagged with <b>{tag}</b></h1>
    <ul class="grid gap-2">
      {
        posts.map((post) => (
          <li>
            <Card
              href={`/blog/${post.id}`}
              title={post.data.title}
              body={post.data.description}
              footer={post.data.datePublished.toDateString()}
            />
          </li>
        ))
      }
    </ul>
  </main>
</Layout>
